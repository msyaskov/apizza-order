openapi: 3.0.3
info:
  title: APizza Order
  description: API для сервиса управления заказами и меню.
  version: 0.1.0
servers:
  - url: 'http://localhost:8080/api/'
tags:
  - name: Pizzas
    description: Операции над меню пицц
  - name: Orders
    description: Операции над заказами
paths:
  /pizzas:
    get:
      operationId: get.pizzas
      summary: Получить меню пицц
      description: Получить список всех пицц
      security:
        - BearerAuth:
            - user
      tags:
        - Pizzas
      responses:
        200:
          description: Список всех пицц
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pizza'
    post:
      operationId: post.pizza
      summary: Добавить пиццу
      description: Добавить пиццу в меню
      security:
        - BearerAuth:
            - admin
      tags:
        - Pizzas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PizzaCandidate'
      responses:
        201:
          description: Добавленная пицца
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pizza'
        400:
          description: Если неподходящий кандидат
  /pizzas/{pizzaId}:
    get:
      operationId: get.pizza
      summary: Получить пиццу
      description: Получить пиццу по её идентификатору
      security:
        - BearerAuth:
            - user
      tags:
        - Pizzas
      responses:
        200:
          description: Пицца с указанным идентификатором
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pizza'
        404:
          description: Если пицца не найдена
    delete:
      operationId: delete.pizza
      summary: Удалить пиццу
      description: Удалить пиццу по её идентификатору
      security:
        - BearerAuth:
            - admin
      tags:
        - Pizzas
      responses:
        200:
          description: Если пицца удалена
        404:
          description: Если пицца не найдена
  /orders:
    get:
      operationId: get.orders
      summary: Получить заказы
      description: Получить список всех заказов
      security:
        - BearerAuth:
            - user
      tags:
        - Orders
      responses:
        200:
          description: Список всех заказов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      operationId: post.order
      summary: Создать заказ
      description: Создать заказ
      security:
        - BearerAuth:
            - user
      tags:
        - Orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCandidate'
      responses:
        201:
          description: Созданный заказ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        400:
          description: Если неподходящий кандидат
  /orders/{orderId}:
    get:
      operationId: get.order
      summary: Получить информацию о заказе
      description: Получить информацию о заказе по его идентификатору
      security:
        - BearerAuth:
            - user
      tags:
        - Orders
      responses:
        200:
          description: Информация о заказе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        404:
          description: Если заказ не найден
    delete:
      operationId: delete.order
      summary: Отменить (удалить) заказ
      description: Отменить (удалить) заказ по его идентификатору
      security:
        - BearerAuth:
            - admin
      tags:
        - Orders
      responses:
        200:
          description: Если заказ отменен (удален)
        404:
          description: Если заказ не найден
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Pizza:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: currency
          description: Стоимость пиццы в рублях
    PizzaCandidate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: currency
          description: Стоимость пиццы в рублях
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
          description: Идентификатор пользователя сделавшего заказ
        date:
          type: string
          format: date
        price:
          type: number
          format: currency
          description: Стоимость заказа в рублях
        pizzas:
          type: array
          items:
            type: string
            format: uuid
            description: Идентификаторы заказанных пицц
    OrderCandidate:
      type: object
      properties:
        pizzas:
          type: array
          items:
            type: string
            format: uuid
            description: Идентификаторы заказанных пицц